name: ClimateData CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout your repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Install dependencies, including Docker and MySQL client
      - name: Install dependencies
        run: |
          sudo apt-get update
          # install docker, mysql client, python and pip
          sudo apt-get install -y docker.io mysql-client python3 python3-pip
          pip3 install mysql-connector-python

      # Start a clean MySQL container
      - name: Start MySQL container
      # Use secrets for the password; act will pick this up from your .secrets file
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          # Remove any existing MySQL container named 'mysql'
          docker rm -f mysql || true

          # Start a new MySQL container with root password and preâ€‘create project_db
          docker run -d --name mysql \
            -e MYSQL_ROOT_PASSWORD=$DB_PASSWORD \
            -e MYSQL_DATABASE=project_db \
            -p 3306:3306 \
            mysql:8.0

          # Wait until the server is ready to accept connections
          for i in {1..10}; do
            if mysql -h 127.0.0.1 -u root -p$DB_PASSWORD -e "SELECT 1;" >/dev/null 2>&1; then
              break
            fi
            echo "Waiting for MySQL to become available..."
            sleep 3
          done

      # Run any initial SQL script (optional if flyway already creates database)
      - name: Apply schema_changes.sql
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          mysql -h 127.0.0.1 -u root -p$DB_PASSWORD < schema_changes.sql

      # Pull the Flyway Docker image
      - name: Pull Flyway image
        run: docker pull redgate/flyway

      # Apply Flyway migrations
      - name: Run Flyway migrations
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          docker run --rm \
            --network host \
            -v "${{ github.workspace }}/migrations:/flyway/sql" \
            redgate/flyway \
            -user=root \
            -password=$DB_PASSWORD \
            -url="jdbc:mysql://127.0.0.1:3306/project_db?allowPublicKeyRetrieval=true&useSSL=false" \
            migrate

      # Run your multi-threaded Python test
      - name: Run concurrent climate queries
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: project_db
        run: |
          python3 scripts/multi_thread_queries.py

      # Validate the table schema and data
      - name: Validate schema and row count
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          echo "Schema definition:"
          mysql -h 127.0.0.1 -u root -p$DB_PASSWORD -e "DESCRIBE project_db.ClimateData;"
          echo "Row count:"
          mysql -h 127.0.0.1 -u root -p$DB_PASSWORD -e "SELECT COUNT(*) FROM project_db.ClimateData;"
